!function(s){function a(e){s.when(s("#woograbexpress-buttons").remove()).then(function(){s("#btn-ok").hide().after(wp.template("woograbexpress-buttons")(function(e){var o={btn_right:{id:"save-settings",icon:"yes",label:n("buttons.Save Changes")}};return e||o}(e)))})}function r(e,o,r){"string"==typeof o&&(o=o.split("."));try{for(var a=e,n=0;n<o.length;n++)a=a[o[n]];return a}catch(e){return console.log("woograbexpressObject",e),r}}function n(e,o){return r(woograbexpress_backend.i18n,e,o)}function t(e,o){return r(woograbexpress_backend.i18n.errors,e,o)}!function(e){"use strict";var i,s,n,a,t,o,l,p,r;i=[],s=function(){},n={},a=["assert","clear","count","debug","dir","dirxml","error","exception","group","groupCollapsed","groupEnd","info","log","profile","profileEnd","table","time","timeEnd","timeStamp","trace","warn"],l=[],p={},r=function(){return s},t=e.console?function(n){var t;return n in console&&(t=console[n])&&(console[n]=function(){var e,o,r,a;for(e=i.slice.call(arguments,0),r=0,a=p[n].handlers.length;r<a;r++)s.apply.call(p[n].handlers[r],console,e);for(r=0,a=l.length;r<a;r++)o=[n],i.push.apply(o,e),s.apply.call(l[r],console,o);s.apply.call(t,console,e)}),console[n]||r}:r,function(){var e,o,r;for(e=0,o=a.length;e<o;e++)p[r=a[e]]={handlers:[]},t(r)}(),o=function(e,o){var r,a;if("[object Object]"===n.toString.call(e))for(r in e)a=e[r],"all"===r?l.push(a):r in p&&p[r].handlers.push(a);else"function"==typeof e?l.push(e):e in p&&p[e].handlers.push(o)},e.ConsoleListener={on:o}}(this);var l={params:{},origin_lat:"",origin_lng:"",origin_address:"",zoomLevel:16,apiKeyErrorCheckInterval:null,apiKeyError:"",editingAPIKey:!1,init:function(e){l.params=e,l.apiKeyError="",l.editingAPIKey=!1,ConsoleListener.on("error",function(e){-1!==e.toLowerCase().indexOf("google")&&(l.apiKeyError=e),s(".gm-err-message").length&&s(".gm-err-message").replaceWith('<p style="text-align:center">'+l.convertError(e)+"</p>")}),s('[data-link="api_key"]').each(function(){s(this).after(wp.template("woograbexpress-button")({href:"#",class:"woograbexpress-buttons--has-icon woograbexpress-api-key-button",text:'<span class="dashicons"></span>'}))}),s(document).off("focus",'[data-link="api_key"]'),s(document).on("focus",'[data-link="api_key"]',function(){s(this).prop("readonly")&&!s(this).hasClass("loading")&&s(this).data("value",s(this).val()).prop("readonly",!1)}),s(document).off("blur",'[data-link="api_key"]'),s(document).on("blur",'[data-link="api_key"]',function(){s(this).prop("readonly")||s(this).hasClass("editing")||s(this).data("value",void 0).prop("readonly",!0)}),s(document).off("input",'[data-link="api_key"]',l.handleApiKeyInput),s(document).on("input",'[data-link="api_key"]',l.handleApiKeyInput),s(document).off("click",".woograbexpress-api-key-button",l.editApiKey),s(document).on("click",".woograbexpress-api-key-button",l.editApiKey),s(document).off("click",".woograbexpress-field--origin"),s(document).on("click",".woograbexpress-field--origin",function(){s(this).prop("readonly")&&s(".woograbexpress-edit-location-picker").trigger("click")}),s(document).off("focus",'[data-link="location_picker"]',l.showLocationPicker),s(document).on("focus",'[data-link="location_picker"]',l.showLocationPicker),s(document).off("click","#woograbexpress-btn--map-cancel",l.hideLocationPicker),s(document).on("click","#woograbexpress-btn--map-cancel",l.hideLocationPicker),s(document).off("click","#woograbexpress-btn--map-apply",l.applyLocationPicker),s(document).on("click","#woograbexpress-btn--map-apply",l.applyLocationPicker),s(document).off("click","#woograbexpress-map-search-panel-toggle",l.toggleMapSearch),s(document).on("click","#woograbexpress-map-search-panel-toggle",l.toggleMapSearch)},validateAPIKeyBothSide:function(e){l.validateAPIKeyServerSide(e,l.validateAPIKeyBrowserSide)},validateAPIKeyBrowserSide:function(r){l.apiKeyError="",l.initMap(r.val(),function(){var e={latLng:new google.maps.LatLng(parseFloat(l.params.defaultLat),parseFloat(l.params.defaultLng))};(new google.maps.Geocoder).geocode(e,function(e,o){"ok"===o.toLowerCase()&&(console.log("validateAPIKeyBrowserSide",e),r.addClass("valid"),setTimeout(function(){r.removeClass("editing loading valid")},2e3))}),clearInterval(l.apiKeyErrorCheckInterval),l.apiKeyErrorCheckInterval=setInterval(function(){(r.hasClass("valid")||l.apiKeyError)&&clearInterval(l.apiKeyErrorCheckInterval),l.apiKeyError&&(l.showError(r,l.apiKeyError),r.prop("readonly",!1).removeClass("loading"))},300)})},validateAPIKeyServerSide:function(o,r){s.ajax({method:"POST",url:l.params.ajax_url,data:{action:"woograbexpress_validate_api_key_server",nonce:l.params.validate_api_key_nonce,key:o.val()}}).done(function(e){console.log("validateAPIKeyServerSide",e),"function"==typeof r?r(o):(o.addClass("valid"),setTimeout(function(){o.removeClass("editing loading valid")},2e3))}).fail(function(e){e.responseJSON&&e.responseJSON.data?l.showError(o,e.responseJSON.data):e.statusText?l.showError(o,e.statusText):l.showError(o,"Google Distance Matrix API error: Uknown"),o.prop("readonly",!1).removeClass("loading")})},showError:function(e,o){s('<div class="error notice woograbexpress-error-box"><p>'+l.convertError(o)+"</p></div>").hide().appendTo(e.closest("td")).slideDown()},removeError:function(e){e.closest("td").find(".woograbexpress-error-box").remove()},convertError:function(e){return e.replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,"<a href='$1' target='_blank'>$1</a>")},handleApiKeyInput:function(e){var o=s(e.currentTarget);o.val()===o.data("value")?o.removeClass("editing").next(".woograbexpress-edit-api-key").removeClass("editing"):o.addClass("editing").next(".woograbexpress-edit-api-key").addClass("editing"),l.removeError(o)},editApiKey:function(e){e.preventDefault();var o=s(this).blur().prev("input");o.hasClass("editing")&&!o.hasClass("loading")&&(o.prop("readonly",!0).addClass("loading"),"api_key"===o.attr("data-key")?l.validateAPIKeyServerSide(o):l.validateAPIKeyBrowserSide(o),l.removeError(o))},showLocationPicker:function(e){e.preventDefault(),s(this).blur(),l.apiKeyError="";var o=s("#woocommerce_woograbexpress_api_key_picker").val();if(l.isEditingAPIKey())return window.alert(t("finish_editing_api"));if(!o.length)return window.alert(t("api_key_picker_empty"));s(".modal-close-link").hide(),a({btn_left:{id:"map-cancel",label:n("buttons.Cancel"),icon:"undo"},btn_right:{id:"map-apply",label:n("buttons.Apply Changes"),icon:"editor-spellcheck"}}),s("#woograbexpress-field-group-wrap--location_picker").fadeIn().siblings().hide();var r=s("#woograbexpress-field-group-wrap--location_picker").find(".wc-settings-sub-title").first().addClass("woograbexpress-hidden");s(".wc-backbone-modal-header").find("h1").append("<span>"+r.text()+"</span>"),l.initMap(o,l.renderMap)},hideLocationPicker:function(e){e.preventDefault(),l.destroyMap(),s(".modal-close-link").show(),a(),s("#woograbexpress-field-group-wrap--location_picker").find(".wc-settings-sub-title").first().removeClass("woograbexpress-hidden"),s(".wc-backbone-modal-header").find("h1 span").remove(),s("#woograbexpress-field-group-wrap--location_picker").hide().siblings().not(".woograbexpress-hidden").fadeIn()},applyLocationPicker:function(e){e.preventDefault(),l.apiKeyError||(s("#woocommerce_woograbexpress_origin_lat").val(l.origin_lat),s("#woocommerce_woograbexpress_origin_lng").val(l.origin_lng),s("#woocommerce_woograbexpress_origin_address").val(l.origin_address)),l.hideLocationPicker(e)},toggleMapSearch:function(e){e.preventDefault(),s("#woograbexpress-map-search-panel").toggleClass("expanded")},initMap:function(e,o){l.destroyMap(),_.isEmpty(e)&&(e="InvalidKey"),s.getScript("https://maps.googleapis.com/maps/api/js?libraries=geometry,places&key="+e,o)},renderMap:function(){l.origin_lat=s("#woocommerce_woograbexpress_origin_lat").val(),l.origin_lng=s("#woocommerce_woograbexpress_origin_lng").val();var e={lat:_.isEmpty(l.origin_lat)?parseFloat(l.params.defaultLat):parseFloat(l.origin_lat),lng:_.isEmpty(l.origin_lng)?parseFloat(l.params.defaultLng):parseFloat(l.origin_lng)},r=new google.maps.Map(document.getElementById("woograbexpress-map-canvas"),{mapTypeId:"roadmap",center:e,zoom:l.zoomLevel,streetViewControl:!1,mapTypeControl:!1}),a=new google.maps.Marker({map:r,position:e,draggable:!0,icon:l.params.marker}),n=new google.maps.InfoWindow({maxWidth:350});_.isEmpty(l.origin_lat)||_.isEmpty(l.origin_lng)?(n.setContent(l.params.i18n.drag_marker),n.open(r,a)):l.setLatLng(a.position,a,r,n),google.maps.event.addListener(a,"dragstart",function(){n.close()}),google.maps.event.addListener(a,"dragend",function(e){l.setLatLng(e.latLng,a,r,n)}),s("#woograbexpress-map-wrap").prepend(wp.template("woograbexpress-map-search-panel")()),r.controls[google.maps.ControlPosition.TOP_LEFT].push(document.getElementById("woograbexpress-map-search-panel"));var t=new google.maps.places.SearchBox(document.getElementById("woograbexpress-map-search-input"));r.addListener("bounds_changed",function(){t.setBounds(r.getBounds())});var i=[];t.addListener("places_changed",function(){var e=t.getPlaces();if(0!==e.length){i.forEach(function(e){e.setMap(null)}),i=[];var o=new google.maps.LatLngBounds;e.forEach(function(e){e.geometry?(a=new google.maps.Marker({map:r,position:e.geometry.location,draggable:!0,icon:l.params.marker}),l.setLatLng(e.geometry.location,a,r,n),google.maps.event.addListener(a,"dragstart",function(){n.close()}),google.maps.event.addListener(a,"dragend",function(e){l.setLatLng(e.latLng,a,r,n)}),i.push(a),e.geometry.viewport?o.union(e.geometry.viewport):o.extend(e.geometry.location)):console.log("Returned place contains no geometry")}),r.fitBounds(o)}}),setTimeout(function(){s("#woograbexpress-map-search-panel").removeClass("woograbexpress-hidden")},500)},destroyMap:function(){window.google&&(window.google=void 0),s("#woograbexpress-map-canvas").empty(),s("#woograbexpress-map-search-panel").remove()},setLatLng:function(a,n,t,i){(new google.maps.Geocoder).geocode({latLng:a},function(e,o){if(o===google.maps.GeocoderStatus.OK&&e[0]){var r=[l.params.i18n.latitude+": "+a.lat().toString(),l.params.i18n.longitude+": "+a.lng().toString()];i.setContent(r.join("<br />")),i.open(t,n),n.addListener("click",function(){i.open(t,n)}),s("#woograbexpress-map-search-input").val(e[0].formatted_address),l.origin_lat=a.lat(),l.origin_lng=a.lng(),l.origin_address=e[0].formatted_address}}),t.setCenter(a)},isEditingAPIKey:function(){return 0<s('[data-link="api_key"].editing').length}},o={renderForm:function(){if(s("#woocommerce_woograbexpress_origin_type")&&s("#woocommerce_woograbexpress_origin_type").length){s(document).off("click","#woograbexpress-btn--save-settings",o.submitForm),s(document).on("click","#woograbexpress-btn--save-settings",o.submitForm),s(document).off("change","#woocommerce_woograbexpress_origin_type",o.toggleStoreOriginFields),s(document).on("change","#woocommerce_woograbexpress_origin_type",o.toggleStoreOriginFields),s("#woocommerce_woograbexpress_origin_type").trigger("change"),s(".wc-modal-shipping-method-settings table.form-table").each(function(){var e=s(this);e.find("tr").length||e.remove()}),s(".woograbexpress-field-group").each(function(){var e=s(this),o=e.attr("id").replace("woocommerce_woograbexpress_field_group_",""),r=e.next("p").detach(),a=e.nextAll("table.form-table").first().attr("id","woograbexpress-table--"+o).addClass("woograbexpress-table woograbexpress-table--"+o).detach();e.wrap('<div id="woograbexpress-field-group-wrap--'+o+'" class="woograbexpress-field-group-wrap stuffbox woograbexpress-field-group-wrap--'+o+'"></div>'),r.appendTo("#woograbexpress-field-group-wrap--"+o),a.appendTo("#woograbexpress-field-group-wrap--"+o),a&&a.length?e.hasClass("woograbexpress-field-group-hidden")&&s("#woograbexpress-field-group-wrap--"+o).addClass("woograbexpress-hidden"):s("#woograbexpress-field-group-wrap--"+o).remove()}),s(".woograbexpress-field").each(function(){var e=s(this),o=e.attr("data-unit");o&&(e.next(".woograbexpress-field-unit").remove(),e.after('<span class="woograbexpress-field-unit">'+o+"</span>"))});var e=_.mapObject(woograbexpress_backend,function(e,o){switch(o){case"default_lat":case"default_lng":case"test_destination_lat":case"test_destination_lng":return parseFloat(e);default:return e}});l.init(e),a()}},maybeOpenModal:function(){woograbexpress_backend.showSettings&&setTimeout(function(){for(var e=!1,o=s(document).find(".wc-shipping-zone-method-type"),r=0;r<o.length;r++){var a=o[r];if(s(a).text()===woograbexpress_backend.methodTitle)return s(a).closest("tr").find(".row-actions .wc-shipping-zone-method-settings").trigger("click"),void(e=!0)}e||(s(".wc-shipping-zone-add-method").trigger("click"),s('select[name="add_method_id"]').val(woograbexpress_backend.methodId).trigger("change"))},500)},submitForm:function(e){e.preventDefault(),l.isEditingAPIKey()?window.alert(t("finish_editing_api")):s("#btn-ok").trigger("click")},toggleStoreOriginFields:function(e){e.preventDefault();var r=s(this).val(),o=s(this).data("fields");_.each(o,function(e,o){_.each(e,function(e){o!==r?s("#"+e).closest("tr").hide():s("#"+e).closest("tr").show()})})},initForm:function(){s(document.body).off("wc_backbone_modal_loaded",o.renderForm),s(document.body).on("wc_backbone_modal_loaded",o.renderForm)},init:function(){o.initForm(),o.maybeOpenModal()}};s(document).ready(o.init)}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
